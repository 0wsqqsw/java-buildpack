#!/usr/bin/env ruby
# Encoding: utf-8
# Cloud Foundry Java Buildpack
# Copyright (c) 2013 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# JVM memory settings calculator.
#
# When run as a separate process, the exit status is 0 in the successful case
# and non-zero in failure cases (in which case an error should be logged).

dir = File.join(File.expand_path(File.dirname(__FILE__)), 'lib')
$:.unshift dir

require 'java_buildpack/diagnostics/logger_factory'
require 'java_buildpack/buildpack'
require 'java_buildpack/jre/memory/openjdk_memory_heuristic_factory'
require 'java_buildpack/util/tokenized_version'
require 'time'

$stdout.sync = true
$stderr.sync = true

build_dir = ARGV[0]

module MemCalc

  def self.memory
    sizes      = @@MEMORY_SIZES@@
    heuristics = @@MEMORY_HEURISTICS@@
    version    = JavaBuildpack::Util::TokenizedVersion.new(@@JRE_VERSION@@)
    JavaBuildpack::Jre::OpenJDKMemoryHeuristicFactory.create_memory_heuristic(sizes, heuristics, version).resolve
  end

end

JavaBuildpack::Buildpack.drive_buildpack_with_logger(build_dir, 'Compile failed with exception %s') do |_|
  logger = JavaBuildpack::Diagnostics::LoggerFactory.get_logger
  begin
    settings = MemCalc.memory
    logger.info("#{__FILE__} calculated JVM memory settings: `#{settings}`")
    puts settings.join ' '
  rescue => e
    logger.error("#{__FILE__} failed with exception #{e.inspect}")
    logger.debug("Exception #{e.inspect} backtrace:\n#{e.backtrace.join("\n")}")
    abort e.message
  end
end
